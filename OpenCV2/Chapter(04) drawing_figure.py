# https://m.blog.naver.com/samsjang/220501624273

import numpy as np
import cv2

def drawing():

    img = np.zeros((512,512,3), np.uint8)
    # 각종 도형을 그리기 위한 공간을 생성.
    # numpy.zeros() 함수는 numpy 배열을 만들고 모든 값을 0으로 채우는 함수이다.
    # 여기서는 512 x 512 인 배열을 만드는데, 각 멤버가 (0, 0, 0)인 배열. 그리고, 채우는 데이터 타입은 uint8 이다.
    # 이를 이미지 차원에서 다시 설명하면, 512 x 512 크기의 검정색 이미지를 생성한 것과 같다.

    cv2.line(img, (0,0), (511,511), (255,0,0), 5)
    # 1st : 그릴 배경
    # 2nd : 직선의 시작점
    # 3rd : 직선의 끝점
    # 4th : 선의 색상
    # 5th : 선의 굵기
    # 좌표 (0, 0)은 img의 좌측 상단 모퉁이며, (511, 511)은 우측 아래 모퉁이 이다. 즉, 위 코드는 사각형 모양의 검정색 판에 대각선을 그린다.

    cv2.rectangle(img, (384,0), (510,128), (0,255,0), 3)
    # 1st : 그릴 배경
    # 2nd : 사각형 좌측 상단 꼭짓점
    # 3rd : 사각형 우측 하단 꼭짓점
    # 4th : 선의 색상
    # 5th : 선의 굵기

    cv2.circle(img, (447,63), 63, (0,0,255), -1)
    # 1st : 그릴 배경
    # 2nd : 원의 중심
    # 3rd : 원의 반지름
    # 4th : 선의 색상
    # 5th : 선의 굵기, 음수일 경우 내부를 채움

    cv2.ellipse(img, (256,256), (100,20), 0, 90, 360, (255,0,0), -1)
    # 1st : 그릴 배경
    # 2nd : 타원의 중심
    # 3rd : 장축과 단축의 1/2 길이
    # 4th : 타원의 기울기 각도 (타원 전체를 회전)
    # 5th : 타원의 호를 그리는 시작 각도
    # 6th : 타원의 호를 그리는 끝 각도
    # 7th : 선의 색상
    # 8th : 선의 굵기

    font = cv2.FONT_HERSHEY_SIMPLEX
    # cv2 내장 폰트 불러오기
    cv2.putText(img, 'OpenCV', (10,500), font, 4, (255,255,255), 5)
    # 1st : 그릴 배경
    # 2nd : 입력할 문자
    # 3rd : 글자 위치
    # 4th : 폰트 종류
    # 5th : 글자 크기
    # 6th : 글자 색상
    # 7th : 글자 굵기

    cv2.imshow('drawing', img)
    cv2.waitKey(0)
    cv2.destroyAllWindows()

drawing()